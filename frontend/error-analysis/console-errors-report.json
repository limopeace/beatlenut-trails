[
  {
    "page": "homepage",
    "url": "http://localhost:3000",
    "errors": [],
    "warnings": [],
    "pageErrors": [],
    "failedRequests": [
      {
        "url": "http://localhost:3000/videos/12542049_3840_2160_60fps.mp4",
        "failure": "net::ERR_ABORTED",
        "timestamp": "2025-06-30T09:14:00.726Z"
      },
      {
        "url": "http://localhost:3000/videos/12542049_3840_2160_60fps.mp4",
        "failure": "net::ERR_ABORTED",
        "timestamp": "2025-06-30T09:14:00.732Z"
      },
      {
        "url": "http://localhost:3000/videos/12542049_3840_2160_60fps.mp4",
        "failure": "net::ERR_ABORTED",
        "timestamp": "2025-06-30T09:14:00.736Z"
      },
      {
        "url": "http://localhost:3000/videos/12542049_3840_2160_60fps.mp4",
        "failure": "net::ERR_ABORTED",
        "timestamp": "2025-06-30T09:14:00.998Z"
      },
      {
        "url": "http://localhost:3000/videos/14090435-hd_1920_1080_60fps.mp4",
        "failure": "net::ERR_ABORTED",
        "timestamp": "2025-06-30T09:14:01.010Z"
      }
    ],
    "totalIssues": 5
  },
  {
    "page": "about",
    "url": "http://localhost:3000/about",
    "errors": [
      {
        "type": "error",
        "text": "Failed to load resource: the server responded with a status of 404 (Not Found)",
        "timestamp": "2025-06-30T09:14:08.975Z"
      },
      {
        "type": "error",
        "text": "Failed to load resource: the server responded with a status of 404 (Not Found)",
        "timestamp": "2025-06-30T09:14:08.975Z"
      },
      {
        "type": "error",
        "text": "Failed to load resource: the server responded with a status of 404 (Not Found)",
        "timestamp": "2025-06-30T09:14:09.043Z"
      },
      {
        "type": "error",
        "text": "Failed to load resource: the server responded with a status of 404 (Not Found)",
        "timestamp": "2025-06-30T09:14:09.043Z"
      },
      {
        "type": "error",
        "text": "Failed to load resource: the server responded with a status of 404 (Not Found)",
        "timestamp": "2025-06-30T09:14:09.044Z"
      }
    ],
    "warnings": [],
    "pageErrors": [],
    "failedRequests": [],
    "totalIssues": 5
  },
  {
    "page": "services",
    "url": "http://localhost:3000/services",
    "errors": [],
    "warnings": [],
    "pageErrors": [],
    "failedRequests": [],
    "totalIssues": 0
  },
  {
    "page": "activities",
    "url": "http://localhost:3000/activities",
    "errors": [],
    "warnings": [],
    "pageErrors": [],
    "failedRequests": [],
    "totalIssues": 0
  },
  {
    "page": "destinations",
    "url": "http://localhost:3000/destinations",
    "errors": [],
    "warnings": [],
    "pageErrors": [],
    "failedRequests": [],
    "totalIssues": 0
  },
  {
    "page": "travel-listings",
    "url": "http://localhost:3000/travel-listings",
    "errors": [],
    "warnings": [],
    "pageErrors": [],
    "failedRequests": [],
    "totalIssues": 0
  },
  {
    "page": "contact",
    "url": "http://localhost:3000/contact",
    "errors": [],
    "warnings": [],
    "pageErrors": [],
    "failedRequests": [],
    "totalIssues": 0
  },
  {
    "page": "team",
    "url": "http://localhost:3000/team",
    "errors": [],
    "warnings": [],
    "pageErrors": [],
    "failedRequests": [],
    "totalIssues": 0
  },
  {
    "page": "bike-rentals",
    "url": "http://localhost:3000/bike-rentals",
    "errors": [
      {
        "type": "error",
        "text": "Failed to load resource: the server responded with a status of 404 (Not Found)",
        "timestamp": "2025-06-30T09:14:41.151Z"
      },
      {
        "type": "error",
        "text": "Failed to load resource: the server responded with a status of 404 (Not Found)",
        "timestamp": "2025-06-30T09:14:41.151Z"
      },
      {
        "type": "error",
        "text": "Failed to load resource: the server responded with a status of 404 (Not Found)",
        "timestamp": "2025-06-30T09:14:41.151Z"
      },
      {
        "type": "error",
        "text": "Failed to load resource: the server responded with a status of 404 (Not Found)",
        "timestamp": "2025-06-30T09:14:41.151Z"
      },
      {
        "type": "error",
        "text": "Failed to load resource: the server responded with a status of 404 (Not Found)",
        "timestamp": "2025-06-30T09:14:41.151Z"
      },
      {
        "type": "error",
        "text": "Failed to load resource: the server responded with a status of 404 (Not Found)",
        "timestamp": "2025-06-30T09:14:41.153Z"
      },
      {
        "type": "error",
        "text": "Failed to load resource: the server responded with a status of 404 (Not Found)",
        "timestamp": "2025-06-30T09:14:41.184Z"
      },
      {
        "type": "error",
        "text": "In HTML, %s cannot be a descendant of <%s>.\nThis will cause a hydration error.%s <a> a \n\n  ...\n    <ErrorBoundary errorComponent={undefined} errorStyles={undefined} errorScripts={undefined}>\n      <LoadingBoundary loading={null}>\n        <HTTPAccessFallbackBoundary notFound={undefined} forbidden={undefined} unauthorized={undefined}>\n          <RedirectBoundary>\n            <RedirectErrorBoundary router={{...}}>\n              <InnerLayoutRouter url=\"/bike-rentals\" tree={[...]} cacheNode={{lazyData:null, ...}} segmentPath={[...]}>\n                <ClientPageRoot Component={function BikeRentalsPage} searchParams={{}} params={{}}>\n                  <BikeRentalsPage params={Promise} searchParams={Promise}>\n                    <div className=\"bg-pale-st...\">\n                      <div>\n                      <div>\n                      <div className=\"container ...\">\n                        <div>\n                        <div className=\"grid grid-...\">\n                          <LinkComponent href=\"/bike-rent...\" className=\"group bloc...\">\n>                           <a\n>                             className=\"group block transform transition duration-300 hover:-translate-y-1 sm:hover:-...\"\n>                             ref={function}\n>                             onClick={function onClick}\n>                             onMouseEnter={function onMouseEnter}\n>                             onTouchStart={function onTouchStart}\n>                             href=\"/bike-rentals/1\"\n>                           >\n                              <div className=\"bg-white r...\">\n                                <div>\n                                <div className=\"p-4 sm:p-5...\">\n                                  <h3>\n                                  <p>\n                                  <div>\n                                  <div>\n                                  <WhatsAppButton template=\"bikeRentals\" source=\"bike-renta...\" product=\"🏍️ Hero X...\" ...>\n>                                   <a\n>                                     href={\"https://wa.me/919876543210?text=Hello%20BeatlenutTrails.%20I'm%20contact...\"}\n>                                     target=\"_blank\"\n>                                     rel=\"noopener noreferrer\"\n>                                     className=\"bg-[#25D366] hover:bg-[#128C7E] text-white rounded-full flex items-ce...\"\n>                                     aria-label=\"Contact us via WhatsApp\"\n>                                   >\n                          ...\n                      ...\n                ...\n",
        "timestamp": "2025-06-30T09:14:41.397Z"
      },
      {
        "type": "error",
        "text": "<%s> cannot contain a nested %s.\nSee this log for the ancestor stack trace. a <a>",
        "timestamp": "2025-06-30T09:14:41.397Z"
      },
      {
        "type": "error",
        "text": "Failed to load resource: the server responded with a status of 404 (Not Found)",
        "timestamp": "2025-06-30T09:14:41.530Z"
      },
      {
        "type": "error",
        "text": "Failed to load resource: the server responded with a status of 404 (Not Found)",
        "timestamp": "2025-06-30T09:14:41.530Z"
      },
      {
        "type": "error",
        "text": "Failed to load resource: the server responded with a status of 404 (Not Found)",
        "timestamp": "2025-06-30T09:14:41.530Z"
      },
      {
        "type": "error",
        "text": "Failed to load resource: the server responded with a status of 404 (Not Found)",
        "timestamp": "2025-06-30T09:14:41.530Z"
      },
      {
        "type": "error",
        "text": "Failed to load resource: the server responded with a status of 404 (Not Found)",
        "timestamp": "2025-06-30T09:14:41.532Z"
      },
      {
        "type": "error",
        "text": "Failed to load resource: the server responded with a status of 404 (Not Found)",
        "timestamp": "2025-06-30T09:14:41.532Z"
      },
      {
        "type": "error",
        "text": "Failed to load resource: the server responded with a status of 404 (Not Found)",
        "timestamp": "2025-06-30T09:14:41.592Z"
      }
    ],
    "warnings": [],
    "pageErrors": [
      {
        "message": "Hydration failed because the server rendered HTML didn't match the client. As a result this tree will be regenerated on the client. This can happen if a SSR-ed Client Component used:\n\n- A server/client branch `if (typeof window !== 'undefined')`.\n- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.\n- Date formatting in a user's locale which doesn't match the server.\n- External changing data without sending a snapshot of it along with the HTML.\n- Invalid HTML tag nesting.\n\nIt can also happen if the client has a browser extension installed which messes with the HTML before React loaded.\n\nhttps://react.dev/link/hydration-mismatch\n\n  ...\n    <LoadingBoundary loading={null}>\n      <HTTPAccessFallbackBoundary notFound={undefined} forbidden={undefined} unauthorized={undefined}>\n        <RedirectBoundary>\n          <RedirectErrorBoundary router={{...}}>\n            <InnerLayoutRouter url=\"/bike-rentals\" tree={[...]} cacheNode={{lazyData:null, ...}} segmentPath={[...]}>\n              <ClientPageRoot Component={function BikeRentalsPage} searchParams={{}} params={{}}>\n                <BikeRentalsPage params={Promise} searchParams={Promise}>\n                  <div className=\"bg-pale-st...\">\n                    <div>\n                    <div>\n                    <div className=\"container ...\">\n                      <div>\n                      <div className=\"grid grid-...\">\n                        <LinkComponent href=\"/bike-rent...\" className=\"group bloc...\">\n                          <a className=\"group bloc...\" ref={function} onClick={function onClick} ...>\n+                           <div\n+                             className=\"bg-white rounded-lg shadow-md overflow-hidden h-full border border-moss-green...\"\n+                           >\n                        ...\n                    ...\n              ...\n\nthrowOnHydrationMismatch (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-dom/cjs/react-dom-client.development.js:4433:11)\nbeginWork (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-dom/cjs/react-dom-client.development.js:10805:17)\nrunWithFiberInDEV (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-dom/cjs/react-dom-client.development.js:845:30)\nperformUnitOfWork (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-dom/cjs/react-dom-client.development.js:15258:22)\nworkLoopConcurrentByScheduler (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-dom/cjs/react-dom-client.development.js:15252:9)",
        "stack": "Error: Hydration failed because the server rendered HTML didn't match the client. As a result this tree will be regenerated on the client. This can happen if a SSR-ed Client Component used:\n\n- A server/client branch `if (typeof window !== 'undefined')`.\n- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.\n- Date formatting in a user's locale which doesn't match the server.\n- External changing data without sending a snapshot of it along with the HTML.\n- Invalid HTML tag nesting.\n\nIt can also happen if the client has a browser extension installed which messes with the HTML before React loaded.\n\nhttps://react.dev/link/hydration-mismatch\n\n  ...\n    <LoadingBoundary loading={null}>\n      <HTTPAccessFallbackBoundary notFound={undefined} forbidden={undefined} unauthorized={undefined}>\n        <RedirectBoundary>\n          <RedirectErrorBoundary router={{...}}>\n            <InnerLayoutRouter url=\"/bike-rentals\" tree={[...]} cacheNode={{lazyData:null, ...}} segmentPath={[...]}>\n              <ClientPageRoot Component={function BikeRentalsPage} searchParams={{}} params={{}}>\n                <BikeRentalsPage params={Promise} searchParams={Promise}>\n                  <div className=\"bg-pale-st...\">\n                    <div>\n                    <div>\n                    <div className=\"container ...\">\n                      <div>\n                      <div className=\"grid grid-...\">\n                        <LinkComponent href=\"/bike-rent...\" className=\"group bloc...\">\n                          <a className=\"group bloc...\" ref={function} onClick={function onClick} ...>\n+                           <div\n+                             className=\"bg-white rounded-lg shadow-md overflow-hidden h-full border border-moss-green...\"\n+                           >\n                        ...\n                    ...\n              ...\n\nthrowOnHydrationMismatch (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-dom/cjs/react-dom-client.development.js:4433:11)\nbeginWork (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-dom/cjs/react-dom-client.development.js:10805:17)\nrunWithFiberInDEV (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-dom/cjs/react-dom-client.development.js:845:30)\nperformUnitOfWork (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-dom/cjs/react-dom-client.development.js:15258:22)\nworkLoopConcurrentByScheduler (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-dom/cjs/react-dom-client.development.js:15252:9)\n    at getReactStitchedError (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/components/errors/stitched-error.js:26:44)\n    at onRecoverableError (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/react-client-callbacks/on-recoverable-error.js:20:68)\n    at runWithFiberInDEV (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-dom/cjs/react-dom-client.development.js:845:30)\n    at flushSpawnedWork (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-dom/cjs/react-dom-client.development.js:15784:15)\n    at commitRoot (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-dom/cjs/react-dom-client.development.js:15529:9)\n    at commitRootWhenReady (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-dom/cjs/react-dom-client.development.js:14759:7)\n    at performWorkOnRoot (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-dom/cjs/react-dom-client.development.js:14682:15)\n    at performWorkOnRootViaSchedulerTask (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react-dom/cjs/react-dom-client.development.js:16350:7)\n    at performWorkUntilDeadline (webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/scheduler/cjs/scheduler.development.js:45:48)",
        "timestamp": "2025-06-30T09:14:41.436Z"
      }
    ],
    "failedRequests": [],
    "totalIssues": 17
  },
  {
    "page": "bike-detail-1",
    "url": "http://localhost:3000/bike-rentals/1",
    "errors": [
      {
        "type": "error",
        "text": "A param property was accessed directly with `params.id`. `params` is now a Promise and should be unwrapped with `React.use()` before accessing properties of the underlying params object. In this version of Next.js direct access to param properties is still supported to facilitate migration but in a future version you will be required to unwrap `params` with `React.use()`.",
        "timestamp": "2025-06-30T09:14:46.255Z"
      },
      {
        "type": "error",
        "text": "A param property was accessed directly with `params.id`. `params` is now a Promise and should be unwrapped with `React.use()` before accessing properties of the underlying params object. In this version of Next.js direct access to param properties is still supported to facilitate migration but in a future version you will be required to unwrap `params` with `React.use()`.",
        "timestamp": "2025-06-30T09:14:46.256Z"
      },
      {
        "type": "error",
        "text": "A param property was accessed directly with `params.id`. `params` is now a Promise and should be unwrapped with `React.use()` before accessing properties of the underlying params object. In this version of Next.js direct access to param properties is still supported to facilitate migration but in a future version you will be required to unwrap `params` with `React.use()`.",
        "timestamp": "2025-06-30T09:14:46.299Z"
      },
      {
        "type": "error",
        "text": "A param property was accessed directly with `params.id`. `params` is now a Promise and should be unwrapped with `React.use()` before accessing properties of the underlying params object. In this version of Next.js direct access to param properties is still supported to facilitate migration but in a future version you will be required to unwrap `params` with `React.use()`.",
        "timestamp": "2025-06-30T09:14:46.299Z"
      },
      {
        "type": "error",
        "text": "A param property was accessed directly with `params.id`. `params` is now a Promise and should be unwrapped with `React.use()` before accessing properties of the underlying params object. In this version of Next.js direct access to param properties is still supported to facilitate migration but in a future version you will be required to unwrap `params` with `React.use()`.",
        "timestamp": "2025-06-30T09:14:46.299Z"
      },
      {
        "type": "error",
        "text": "A param property was accessed directly with `params.id`. `params` is now a Promise and should be unwrapped with `React.use()` before accessing properties of the underlying params object. In this version of Next.js direct access to param properties is still supported to facilitate migration but in a future version you will be required to unwrap `params` with `React.use()`.",
        "timestamp": "2025-06-30T09:14:46.299Z"
      },
      {
        "type": "error",
        "text": "A param property was accessed directly with `params.id`. `params` is now a Promise and should be unwrapped with `React.use()` before accessing properties of the underlying params object. In this version of Next.js direct access to param properties is still supported to facilitate migration but in a future version you will be required to unwrap `params` with `React.use()`.",
        "timestamp": "2025-06-30T09:14:46.299Z"
      },
      {
        "type": "error",
        "text": "A param property was accessed directly with `params.id`. `params` is now a Promise and should be unwrapped with `React.use()` before accessing properties of the underlying params object. In this version of Next.js direct access to param properties is still supported to facilitate migration but in a future version you will be required to unwrap `params` with `React.use()`.",
        "timestamp": "2025-06-30T09:14:46.299Z"
      },
      {
        "type": "error",
        "text": "A param property was accessed directly with `params.id`. `params` is now a Promise and should be unwrapped with `React.use()` before accessing properties of the underlying params object. In this version of Next.js direct access to param properties is still supported to facilitate migration but in a future version you will be required to unwrap `params` with `React.use()`.",
        "timestamp": "2025-06-30T09:14:46.299Z"
      },
      {
        "type": "error",
        "text": "Failed to load resource: the server responded with a status of 404 (Not Found)",
        "timestamp": "2025-06-30T09:14:46.364Z"
      },
      {
        "type": "error",
        "text": "Failed to load resource: the server responded with a status of 404 (Not Found)",
        "timestamp": "2025-06-30T09:14:46.364Z"
      },
      {
        "type": "error",
        "text": "Failed to load resource: the server responded with a status of 404 (Not Found)",
        "timestamp": "2025-06-30T09:14:46.364Z"
      }
    ],
    "warnings": [],
    "pageErrors": [],
    "failedRequests": [],
    "totalIssues": 12
  },
  {
    "page": "bike-detail-2",
    "url": "http://localhost:3000/bike-rentals/2",
    "errors": [
      {
        "type": "error",
        "text": "A param property was accessed directly with `params.id`. `params` is now a Promise and should be unwrapped with `React.use()` before accessing properties of the underlying params object. In this version of Next.js direct access to param properties is still supported to facilitate migration but in a future version you will be required to unwrap `params` with `React.use()`.",
        "timestamp": "2025-06-30T09:14:50.384Z"
      },
      {
        "type": "error",
        "text": "A param property was accessed directly with `params.id`. `params` is now a Promise and should be unwrapped with `React.use()` before accessing properties of the underlying params object. In this version of Next.js direct access to param properties is still supported to facilitate migration but in a future version you will be required to unwrap `params` with `React.use()`.",
        "timestamp": "2025-06-30T09:14:50.384Z"
      },
      {
        "type": "error",
        "text": "A param property was accessed directly with `params.id`. `params` is now a Promise and should be unwrapped with `React.use()` before accessing properties of the underlying params object. In this version of Next.js direct access to param properties is still supported to facilitate migration but in a future version you will be required to unwrap `params` with `React.use()`.",
        "timestamp": "2025-06-30T09:14:50.423Z"
      },
      {
        "type": "error",
        "text": "A param property was accessed directly with `params.id`. `params` is now a Promise and should be unwrapped with `React.use()` before accessing properties of the underlying params object. In this version of Next.js direct access to param properties is still supported to facilitate migration but in a future version you will be required to unwrap `params` with `React.use()`.",
        "timestamp": "2025-06-30T09:14:50.423Z"
      },
      {
        "type": "error",
        "text": "A param property was accessed directly with `params.id`. `params` is now a Promise and should be unwrapped with `React.use()` before accessing properties of the underlying params object. In this version of Next.js direct access to param properties is still supported to facilitate migration but in a future version you will be required to unwrap `params` with `React.use()`.",
        "timestamp": "2025-06-30T09:14:50.423Z"
      },
      {
        "type": "error",
        "text": "A param property was accessed directly with `params.id`. `params` is now a Promise and should be unwrapped with `React.use()` before accessing properties of the underlying params object. In this version of Next.js direct access to param properties is still supported to facilitate migration but in a future version you will be required to unwrap `params` with `React.use()`.",
        "timestamp": "2025-06-30T09:14:50.423Z"
      },
      {
        "type": "error",
        "text": "A param property was accessed directly with `params.id`. `params` is now a Promise and should be unwrapped with `React.use()` before accessing properties of the underlying params object. In this version of Next.js direct access to param properties is still supported to facilitate migration but in a future version you will be required to unwrap `params` with `React.use()`.",
        "timestamp": "2025-06-30T09:14:50.423Z"
      },
      {
        "type": "error",
        "text": "A param property was accessed directly with `params.id`. `params` is now a Promise and should be unwrapped with `React.use()` before accessing properties of the underlying params object. In this version of Next.js direct access to param properties is still supported to facilitate migration but in a future version you will be required to unwrap `params` with `React.use()`.",
        "timestamp": "2025-06-30T09:14:50.423Z"
      },
      {
        "type": "error",
        "text": "A param property was accessed directly with `params.id`. `params` is now a Promise and should be unwrapped with `React.use()` before accessing properties of the underlying params object. In this version of Next.js direct access to param properties is still supported to facilitate migration but in a future version you will be required to unwrap `params` with `React.use()`.",
        "timestamp": "2025-06-30T09:14:50.423Z"
      },
      {
        "type": "error",
        "text": "A param property was accessed directly with `params.id`. `params` is now a Promise and should be unwrapped with `React.use()` before accessing properties of the underlying params object. In this version of Next.js direct access to param properties is still supported to facilitate migration but in a future version you will be required to unwrap `params` with `React.use()`.",
        "timestamp": "2025-06-30T09:14:50.423Z"
      },
      {
        "type": "error",
        "text": "Failed to load resource: the server responded with a status of 404 (Not Found)",
        "timestamp": "2025-06-30T09:14:50.482Z"
      },
      {
        "type": "error",
        "text": "Failed to load resource: the server responded with a status of 404 (Not Found)",
        "timestamp": "2025-06-30T09:14:50.482Z"
      },
      {
        "type": "error",
        "text": "Failed to load resource: the server responded with a status of 404 (Not Found)",
        "timestamp": "2025-06-30T09:14:50.482Z"
      }
    ],
    "warnings": [],
    "pageErrors": [],
    "failedRequests": [],
    "totalIssues": 13
  }
]